{"version":3,"sources":["assets/images/logo.png","assets/js/Utils.js","components/Loading.js","components/PrivateRoute.js","components/Dashbard/SideBar.js","components/Dashbard/Dashboard.js","components/Sign/SignIn.js","components/Sign/SignUp.js","components/Sign/Sign.js","components/Overlay.js","components/Navbar/LoggedOut.js","components/Navbar/Navbar.js","components/Navbar/LoggedIn.js","components/Home.js","assets/js/weNoteTheme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Utils","str","trim","undefined","Math","floor","random","response","Request","GET","status","json","window","localStorage","clear","sessionStorage","location","reload","NOT_JSON","api_address","this","headers","token","key","value","endpoint","abortController","AbortController","fetch","signal","err","alert","ERROR_MESSAGE","body","method","abort","Loading","align","className","PrivateRoute","props","useState","isAuth","setIsAuth","useEffect","state","exact","path","children","to","SideBar","Dashboard","SignIn","rememberMe","setRememberMe","username","setUsername","password","setPassword","isError","setIsError","Paper","alt","src","LOGO","TextField","placeholder","label","name","error","color","onChange","e","target","InputProps","startAdornment","InputAdornment","position","type","FormControlLabel","style","margin","control","Checkbox","Button","onClick","req","data","POST","JSON","stringify","then","Swal","fire","showConfirmButton","timer","icon","title","text","catch","console","log","variant","toggleDisplay","toggleSignOut","SignUp","Sign","In","Up","isShowPassword","setIsShowPassword","setName","toggleShowPassword","endAdornment","toggleSignIn","Overlay","childrenWithProps","React","Children","map","child","cloneElement","display","stopPropagation","LoggedOut","Navbar","LoggedIn","toggleSignUp","Home","isSignIn","setIsSignIn","isSignUp","setIsSignUp","user","weNoteTheme","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","App","setUser","getUser","ThemeProvider","theme","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fed44cc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21786caf.png\";","class Utils {\n    static isEmptyString(str) {\n        return typeof str === 'undefined' || str == null || str.trim() === '' || str === undefined\n    }\n\n    static getRandomNumber() { return Math.floor(Math.random() * 10000) }\n\n    static getUser() {\n        var req = new Utils.Request()\n        const endpoint = '/user'\n        const response = req.GET(endpoint)\n        return response.status === 200 ? response.json() : null\n    }\n\n    static logout() {\n        window.localStorage.clear();\n        window.sessionStorage.clear()\n        window.location.reload(true);\n    }\n\n    static get ERROR_MESSAGE() { return \"Error processing request. Please contact admin.\" }\n\n    static Request = class {\n        static abortController = null\n        constructor(NOT_JSON = false, api_address = 'http://10.19.130.163:5000') {\n            this.headers = NOT_JSON ? {} : { 'Content-Type': 'application/json' }\n            this.api_address = api_address\n        }\n\n        setAuthorization(token) {\n            this.headers['Authorization'] = token;\n        }\n\n        setOtherHeader(key, value) {\n            this.headers[key] = value;\n        }\n\n        static abortProcesses() {\n            if (Utils.Request.abortController != null) {\n                Utils.Request.abortController.abort();\n            }\n        }\n\n        GET(endpoint) {\n            Utils.Request.abortController = new AbortController()\n            try {\n                return fetch(this.api_address + endpoint, {\n                    signal: Utils.Request.abortController.signal,\n                    headers: this.headers,\n                });\n            } catch (err) {\n                alert(Utils.ERROR_MESSAGE + err)\n                return null;\n            }\n        }\n\n        POST(endpoint, body) {\n            Utils.Request.abortController = new AbortController()\n            try {\n                return fetch(this.api_address + endpoint, {\n                    signal: Utils.Request.abortController.signal,\n                    method: \"POST\",\n                    headers: this.headers,\n                    body: body\n                });\n            } catch (err) {\n                alert(Utils.ERROR_MESSAGE + err)\n                return null;\n            }\n        }\n\n\n        PUT(endpoint, body) {\n            Utils.Request.abortController = new AbortController()\n            try {\n                return fetch(this.api_address + endpoint, {\n                    signal: Utils.Request.abortController.signal,\n                    method: \"PUT\",\n                    headers: this.headers,\n                    body: body\n                });\n            } catch (err) {\n                alert(Utils.ERROR_MESSAGE + err)\n                return null;\n            }\n        }\n\n        PATCH(endpoint, body) {\n            Utils.Request.abortController = new AbortController()\n            try {\n                return fetch(this.api_address + endpoint, {\n                    signal: Utils.Request.abortController.signal,\n                    method: \"PATCH\",\n                    headers: this.headers,\n                    body: body\n                });\n            } catch (err) {\n                alert(Utils.ERROR_MESSAGE + err)\n                return null;\n            }\n        }\n\n        DELETE(endpoint, body) {\n            Utils.Request.abortController = new AbortController()\n            try {\n                return fetch(this.api_address + endpoint, {\n                    signal: Utils.Request.abortController.signal,\n                    method: \"DELETE\",\n                    headers: this.headers,\n                    body: body\n                });\n            } catch (err) {\n                alert(Utils.ERROR_MESSAGE + err)\n                return null;\n            }\n        }\n    }\n}\n\nexport default Utils","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div align=\"center\" className=\"circle-loader\">\n            <div />\n        </div>\n    )\n}\n\nexport default Loading;","import React, { useEffect, useState } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport Utils from '../assets/js/Utils'\nimport Loading from './Loading'\n\n\nfunction PrivateRoute(props) {\n    const [isAuth, setIsAuth] = useState(undefined)\n\n    useEffect(() => setIsAuth(Utils.isAuth()), [])\n\n    return (\n        typeof this.state.isAuth === 'undefined' ?\n            <Loading />\n            :\n            <Route exact path={props.path}>\n                {\n                    isAuth\n                        ? props.children\n                        : <Redirect to='/' />\n                }\n            </Route>\n    )\n}\n\nexport default PrivateRoute;","import React from 'react'\n\nfunction SideBar(props) {\n    return (\n        <div></div>\n    )\n}\n\nexport default SideBar;\n","import React from 'react'\nimport SideBar from './SideBar'\n\nfunction Dashboard(props) {\n    return (\n        <>\n            <SideBar />\n            <h1>Hello World!!</h1>\n        </>\n    )\n}\n\nexport default Dashboard;","import React, { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport MailOutline from '@material-ui/icons/MailOutline';\nimport LockOutlined from '@material-ui/icons/LockOutlined';\nimport Utils from '../../assets/js/Utils'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport LOGO from '../../assets/images/logo.png';\nimport Swal from 'sweetalert2'\n\n\nfunction SignIn(props) {\n    const [rememberMe, setRememberMe] = useState(false)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [isError, setIsError] = useState(false)\n\n    const gotoCreateAccount = () => {\n        props.toggleDisplay()\n        props.toggleSignOut()\n    }\n\n    const handleAuthentication = () => {\n        let req = new Utils.Request()\n        const data = {\n            username: username,\n            password: password\n        }\n        const endpoint = '/user/login'\n        req.POST(endpoint, JSON.stringify(data)).then(response => {\n            if (response.status === 200) {\n                response.json()\n                    .then(response => {\n                        Swal.fire({\n                            showConfirmButton: false,\n                            timer: 1500,\n                            icon: 'success',\n                            title: 'Account Status',\n                            text: 'Your account has been successfully created!'\n                        }).then(() => {\n                            window.location.reload(true);\n                        })\n                    })\n            } else {\n                setIsError(true)\n            }\n        }).catch(err => console.log(err))\n    }\n\n    return (\n        <>\n            <Paper className=\"sign-card\">\n                <div className=\"sign-card-logo\">\n                    <img alt=\"logo\" src={LOGO} className=\"sign-card-logo\" />\n                </div>\n                <div className=\"sign-card-title\">\n                    Sign In\n                </div>\n                <div className=\"sign-card-textfields\">\n                    <TextField\n                        value={username}\n                        placeholder=\"email@example.com\"\n                        label=\"Email\"\n                        name=\"username\"\n                        error={isError}\n                        color=\"secondary\"\n                        onChange={e => setUsername(e.target.value)}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <MailOutline />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        placeholder=\"Your password\"\n                        name=\"password\"\n                        onChange={e => setPassword(e.target.value)}\n                        value={password}\n                        error={isError}\n                        color=\"secondary\"\n                        type={\"password\"}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <LockOutlined />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <FormControlLabel\n                        style={{ margin: '-10px 10px -5px 5px' }}\n                        control={\n                            <Checkbox\n                                onChange={() => setRememberMe(!rememberMe)}\n                                value={rememberMe}\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Remember me\"\n                    />\n                </div>\n                <div className=\"sign-card-button\">\n                    <Button onClick={handleAuthentication} variant=\"contained\" color=\"primary\">\n                        Login\n                    </Button>\n                </div>\n                <div className=\"sign-card-horitontal-line\">\n                    <hr />\n                </div>\n                <div className=\"sign-card-footer\">\n                    Don't have an account yet? <span onClick={gotoCreateAccount}>Create account</span>\n                </div>\n            </Paper>\n        </>\n    )\n}\n\nexport default SignIn;","import React, { useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button'\nimport AccountCircleOutlined from '@material-ui/icons/AccountCircleOutlined'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport MailOutline from '@material-ui/icons/MailOutline'\nimport LockOutlined from '@material-ui/icons/LockOutlined'\nimport Utils from '../../assets/js/Utils'\nimport LOGO from '../../assets/images/logo.png'\nimport Swal from 'sweetalert2'\n\n\nfunction SignUp(props) {\n    const [isShowPassword, setIsShowPassword] = useState(false)\n    const [username, setUsername] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n    const [isError, setIsError] = useState(false)\n\n    const toggleShowPassword = () => setIsShowPassword(!isShowPassword)\n\n    const handleAuthentication = () => {\n        let req = new Utils.Request()\n        const data = {\n            username: username,\n            name: name,\n            password: password\n        }\n        console.log(data)\n        const endpoint = '/user/register'\n        req.POST(endpoint, JSON.stringify(data)).then(response => {\n            if (response.status === 200) {\n                Swal.fire({\n                    showConfirmButton: false,\n                    timer: 1500,\n                    icon: 'success',\n                    title: 'Account Status',\n                    text: 'Your account has been successfully created!'\n                })\n            } else {\n                setIsError(true)\n            }\n        }).catch(err => console.log(err))\n    }\n\n    const gotoSignIn = () => {\n        props.toggleDisplay()\n        props.toggleSignIn()\n    }\n\n    return (\n        <>\n            <Paper className=\"sign-card\">\n                <div className=\"sign-card-logo\">\n                    <img alt=\"logo\" src={LOGO} className=\"sign-card-logo\" />\n                </div>\n                <div className=\"sign-card-title\">\n                    Sign Up\n                </div>\n                <div className=\"sign-card-textfields\">\n                    <TextField\n                        placeholder=\"John Smith\"\n                        value={name}\n                        color=\"secondary\"\n                        type=\"text\"\n                        label=\"Name\"\n                        name=\"name\"\n                        error={isError}\n                        onChange={e => setName(e.target.value)}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <MailOutline />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TextField\n                        placeholder=\"email@example.com\"\n                        value={username}\n                        type=\"email\"\n                        label=\"Email\"\n                        color=\"secondary\"\n                        name=\"email\"\n                        error={isError}\n                        onChange={e => setUsername(e.target.value)}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <AccountCircleOutlined />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TextField\n                        placeholder=\"Your password\"\n                        label=\"Password\"\n                        color=\"secondary\"\n                        name=\"password\"\n                        onChange={e => setPassword(e.target.value)}\n                        value={password}\n                        error={isError}\n                        type={isShowPassword ? \"text\" : \"password\"}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <LockOutlined />\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    {isShowPassword ?\n                                        <VisibilityOff className=\"cursor-pointer\" onClick={toggleShowPassword} /> :\n                                        <Visibility className=\"cursor-pointer\" onClick={toggleShowPassword} />\n                                    }\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                </div>\n                <div className=\"sign-card-button\">\n                    <Button onClick={handleAuthentication} variant=\"contained\" color=\"primary\">\n                        Create Account\n                    </Button>\n                </div>\n                <div className=\"sign-card-horitontal-line\">\n                    <hr />\n                </div>\n                <div className=\"sign-card-footer\">\n                    Already have an account? <span onClick={gotoSignIn} style={{ color: 'blue' }}>Sign In</span>\n                </div>\n            </Paper>\n        </>\n    )\n}\n\nexport default SignUp;\n","import SignIn from './SignIn'\nimport SignUp from './SignUp'\n\nconst Sign = {\n    In: SignIn,\n    Up: SignUp\n}\n\nexport default Sign;","import React from 'react'\n\nfunction Overlay(props) {\n    const childrenWithProps = React.Children.map(props.children, child => {\n        return React.cloneElement(child, { toggleDisplay: props.toggleDisplay })\n    });\n\n    return (\n        <div\n            onClick={props.toggleDisplay}\n            style={{ display: props.display ? 'block' : 'none' }}\n            className=\"overlay\"\n        >\n            <div onClick={e => e.stopPropagation()}>\n                {childrenWithProps}\n            </div>\n        </div>\n    )\n}\n\nexport default Overlay;","import React from 'react'\nimport LOGO from '../../assets/images/logo.png';\nimport { Link } from 'react-router-dom'\n\nfunction LoggedOut(props) {\n    return (\n        <header className=\"navbar\">\n            <Link to={'/'}>\n                <div className=\"navbar-logo\">\n                    <img alt=\"Logo\" src={LOGO} />\n                    <span className=\"logo-text\">weNote</span>\n                </div>\n            </Link>\n            <div className=\"navbar-buttons\">\n                <button className=\"navbar-button\">\n                    About\n                </button>\n                <button onClick={props.toggleSignIn} className=\"navbar-button\">\n                    Sign In\n                </button>\n                <button onClick={props.toggleSignUp} className=\"navbar-button\">\n                    Sign Up\n                </button>\n            </div>\n        </header>\n    )\n}\n\nexport default LoggedOut;","import LoggedIn from './LoggedIn'\nimport LoggedOut from './LoggedOut'\n\nconst Navbar = {\n    LoggedIn: LoggedIn,\n    LoggedOut: LoggedOut\n}\n\nexport default Navbar;","import React from 'react'\nimport LOGO from '../../assets/images/logo.png';\nimport { Link } from 'react-router-dom'\n\nfunction LoggedIn(props) {\n    return (\n        <header className=\"navbar\">\n            <Link to={'/'}>\n                <div className=\"navbar-logo\">\n                    <img alt=\"Logo\" src={LOGO} />\n                    <span className=\"logo-text\">weNote</span>\n                </div>\n            </Link>\n            <div className=\"navbar-buttons\">\n                <button className=\"navbar-button\">\n                    About\n                </button>\n            </div>\n        </header>\n    )\n}\n\nexport default LoggedIn;","import React, { useState } from 'react'\nimport LOGO from '../assets/images/logo.png'\nimport Sign from './Sign/Sign'\nimport Overlay from './Overlay.js'\nimport Navbar from './Navbar/Navbar'\n\n\nfunction Home(props) {\n    const [isSignIn, setIsSignIn] = useState(false)\n    const [isSignUp, setIsSignUp] = useState(false)\n\n    const toggleSignUp = () => setIsSignUp(!isSignUp)\n    const toggleSignIn = () => setIsSignIn(!isSignIn)\n\n    return (\n        <>\n            <Overlay\n                display={isSignIn || isSignUp}\n                toggleDisplay={\n                    isSignIn ? toggleSignIn :\n                        isSignUp ? toggleSignUp :\n                            () => null\n                }\n            >\n                {isSignIn ? <Sign.In toggleSignOut={toggleSignUp} /> :\n                    isSignUp ? <Sign.Up toggleSignIn={toggleSignIn} /> : null}\n            </Overlay>\n            {\n                props.user ?\n                    <Navbar.LoggedIn />\n                    :\n                    <Navbar.LoggedOut\n                        toggleSignIn={toggleSignIn}\n                        toggleSignUp={toggleSignUp}\n                    />\n            }\n            <div className=\"home-main\">\n                <div>\n                    <img src={LOGO} alt=\"logo\" />\n                    <div className=\"logo-text\">\n                        weNote\n                    </div>\n                    <p className=\"home-slogan\">\n                        Optimize your learning experience, <br />\n                        Share and merge notes with your classmates!\n                    </p>\n                    <div className=\"home-main-buttons\">\n                        <button onClick={toggleSignIn}>\n                            Learn More\n                        </button>\n                        <button>\n                            Get Started\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home;","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst weNoteTheme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            '\"Montserrat\"',\n            '\"Helvetica Neue\"',\n            'sans-serif'\n        ].join(',')\n    },\n    palette: {\n        primary: {\n            main: \"#FFCE70\"\n        },\n        secondary: {\n            main: '#494F55',\n        },\n    },\n});\n\nexport default weNoteTheme;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute.js'\nimport Dashboard from './components/Dashbard/Dashboard'\nimport Home from './components/Home'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport weNoteTheme from './assets/js/weNoteTheme'\nimport Utils from './assets/js/Utils'\nimport './assets/app.css';\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    let user = Utils.getUser()\n    console.log(user)\n    setUser(user)\n  }, [])\n\n  return (\n    <ThemeProvider theme={weNoteTheme}>\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <PrivateRoute path=\"/dashboard\">\n              <Dashboard user={user} />\n            </PrivateRoute>\n            <Route path=\"/\">\n              <Home user={user} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}